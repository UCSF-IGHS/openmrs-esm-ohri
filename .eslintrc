{
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint",
    "react",
    "@typescript-eslint",
    "react-hooks",
    "prettier",
    "simple-import-sort"

  ],
  "extends": ["ts-react-important-stuff", "plugin:prettier/recommended"],
  "rules": {
    "no-restricted-imports": [
      "error",
      {
        "paths": [
          {
            "name": "lodash",
            "message": "Import specific methods from `lodash`. e.g. `import map from 'lodash/map'`"
          },
          {
            "name": "lodash-es",
            "importNames": ["default"],
            "message": "Import specific methods from `lodash-es`. e.g. `import { map } from 'lodash-es'`"
          },
          {
            "name": "carbon-components-react",
            "message": "Import from `@carbon/react` directly. e.g. `import { Toggle } from '@carbon/react'`"
          },
          {
            "name": "@carbon/icons-react",
            "message": "Import from `@carbon/react/icons`. e.g. `import { ChevronUp } from '@carbon/react/icons'`"
          }
        ]
      }
    ],
    "@typescript-eslint/tslint/config": ["warn", {
      "lintFile": "", // path to tslint.json of your project
      "rules": {
        // tslint rules (will be used if `lintFile` is not specified)
      },
      "rulesDirectory": [
        // array of paths to directories with rules, e.g. 'node_modules/tslint/lib/rules' (will be used if `lintFile` is not specified)
      ]
    }],
    "no-use-before-define": "off",
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ],
    "simple-import-sort/exports": "error",
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Node.js builtins. You could also generate this regex if you use a `.js` config.
          // For example: `^(${require("module").builtinModules.join("|")})(/|$)`
          [
            "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
          ],
          // Packages
          ["^\\\\w"],
          // Internal packages.
          ["^(@|config/)(/*|$)"],
          // Side effect imports.
          ["^\\\\u0000"],
          // Parent imports. Put `..` last.
          ["^\\\\.\\\\.(?!/?$)", "^\\\\.\\\\./?$"],
          // Other relative imports. Put same-folder imports and `.` last.
          ["^\\\\./(?=.*/)(?!/?$)", "^\\\\.(?!/?$)", "^\\\\./?$"],
          // Style imports.
          ["^.+\\\\.s?css$"]
        ]
      }
    ],
    "import/no-anonymous-default-export": [
      "error",
      {
        "allowArrowFunction": true,
        "allowAnonymousFunction": true
      }
    ]
  }
}
